<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Version: MPL 1.1
  
   The contents of this file are subject to the Mozilla Public License Version
   1.1 (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at
    http://www.mozilla.org/MPL/
  
   Software distributed under the License is distributed on an "AS IS" basis,
   WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   for the specific language governing rights and limitations under the
   License.
  
   The Original Code is Directory Synchronization Engine(DSE).
  
   The Initial Developer of the Original Code is IronKey, Inc..
   Portions created by the Initial Developer are Copyright (C) 2011
   the Initial Developer. All Rights Reserved.
  
   Contributor(s): Shirish Rai
  
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.1.xsd
		http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-1.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd
		http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
		default-autowire="no">

	<!-- First we set up a nice little property configurer, so you can just modify jdbc.properties
		to point to a different database. -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:${syncservice.properties}" />
	</bean>

	<!-- Now we set up apache datasource. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.numberOfConnections}"/>
        <property name="maxIdle" value="${jdbc.numberOfConnections}"/>
        <property name="maxWait" value="10000"/>
     </bean>

	<!-- At last, the entity manager. -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${jdbc.dialect}"/>
				<property name="showSql" value="${jdbc.showSql}"/>
				<property name="generateDdl" value="${jdbc.generateDdl}"/>
			</bean>
		</property>
		<property name="persistenceUnitName" value="puentities" />
		<property name="dataSource" ref="dataSource" />	
		
	</bean>

	<!-- A simple transaction manager for our (single) EntityManagerFactory.  -->
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>



	<!-- We want to use Spring's declarative @Transaction management -->
	<tx:annotation-driven />

	<!-- This makes Spring perform the magic @PersistenceContext/@PersitenceUnit injection -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	
</beans>
